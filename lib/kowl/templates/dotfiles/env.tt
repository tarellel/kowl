########################################
# Application Specific
########################################
<%- if options[:encrypt] -%>
LOCKBOX_MASTER_KEY=<%= SecureRandom.hex(32).force_encoding(Encoding::US_ASCII) %>
<%- end -%>
DISABLE_SPRING=1
DB_POOL=5
RAILS_ENV=<%= config[:env] != 'docker' ? config[:env] : 'development' %>
RAILS_LOG_TO_STDOUT=true
# Used by Puma, sidekiq, and caching for number of running threads
RAILS_MAX_THREADS=5
RAILS_SERVE_STATIC_FILES=true

<%- if options[:database] != 'sqlite3' -%>
########################################
# Database Configuration
########################################
<%= dotfile_databases(options[:database], config[:env]) -%>
<%- end -%>

########################################
# Mailer
########################################
<%- unless options[:skip_mailers] -%>
# If redis-server is not running on localhost it needs to be assigned
# By default this is set in config/application.rb && config/initializers/sidekiq.rb
# => They will fallback to redis://localhost:6379/0 if the ENV variable is not set
# => If running through docker-compose this should be set in the compose file
# REDIS_URL=redis://localhost:6379/0
# Address in which emails will be sent "from"
DEFAULT_EMAIL=noreply@example.com
<%- if options[:mailer] == 'postmark' -%>
POSTMARK_API_TOKEN=<%= SecureRandom.hex(16).force_encoding(Encoding::US_ASCII) %>
<%- else -%>
SPARKPOST_API_KEY=<%= SecureRandom.hex(16).force_encoding(Encoding::US_ASCII) %>
<%- end -%>
<%- end -%>

<%- unless options[:skip_javascript] -%>
########################################
# Javascript/Webpack
########################################
<%- if %w[staging production].include? config[:env] -%>
# Node.js
NODE_ENV=production
<%- end -%>
# So RAILS won't try to compile webpacker assets
# WEBPACKER_DEV_SERVER_HOST=webpack
WEBPACKER_DEV_SERVER_HOST=0.0.0.0
<%- end -%>

########################################
# Analytics and Exception logging
########################################
# Google analytics
# GOOGLE_ANALYTICS=UA-XXXXXXXX-X
HONEYBADGER_API_KEY=<%= SecureRandom.hex(16).force_encoding(Encoding::US_ASCII) %>